#!/bin/bash

# run testbtorbtorgen on multiple cores simultaneously

declare -a ids

readonly usage="*** testmcbtorbtorgen: usage: ./testmcbtorbtorgen [-c <limit>]" 
readonly covdir="./covtests/"
readonly cores=4
readonly sleeptime=10
cov=0
numerrors=0

function cleanup
{
  for ((i = 1; i <= "$cores"; i++))
  do
    if [[ -n "${ids[$i]}" ]]; then
      kill "${ids[$i]}" 2> /dev/null
    fi
  done
}

trap 'cleanup; exit 0' SIGHUP SIGINT SIGTERM

while getopts "c:" o
do
  case "$o" in
  c)	cov=1; covlimit=$OPTARG;;
  [?])	echo "$usage" 1>&2; exit 1;;
  esac
done

if [[ "$cov" -eq 1 ]]; then
  rm -r -f "$covdir"
  mkdir "$covdir"
  if [[ ! -e "$covdir" ]] || [[ ! -d "$covdir" ]] || \
     [[ ! -r "$covdir" ]] || [[ ! -w "$covdir" ]]; then
    echo "IO error"
    exit 1
  fi
fi

rm -f error*.btor

for ((i = 1; i <= "$cores"; i++))
do
  if [[ "$cov" -eq 1 ]]; then
    ./testbtorbtorgen -i "$i" -c "$covlimit" -n > /dev/null &
  else
    ./testbtorbtorgen -i "$i" > /dev/null &
  fi
  ids[$i]=$!
  sleep 1
done

i=0
while [[ "$numerrors" -lt "$cores" ]]
do
  sleep "$sleeptime"
  numerrors=`ls error*.btor 2> /dev/null | wc -l`
  echo "Errors: $numerrors"
  ((i++))
  if [[ "$i" -eq 6 ]]; then
    echo ""
    i=0
  fi
done

