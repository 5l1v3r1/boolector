#!/bin/bash

readonly covdir="covtests/"
readonly selected="${covdir}selected"
readonly usage="minimizecovtests [-i <id>]"
readonly reducedfiletmp="/tmp/minimizecovtests$$.tmp"

function cleanup
{
  if [[ -n "$deltadebscript" ]]; then
    rm -f "$deltadebscript"
  fi
  rm -f "$reducedfiletmp"
}

trap 'cleanup; exit 0' SIGHUP SIGINT SIGTERM

deltabtor=`which deltabtor`
if [[ -z "$deltabtor" ]]; then
  echo "*** minimizecovtests: can not find 'deltabtor'" 1>&2
  exit 1
fi

if [[ ! -e "$covdir" ]] || [[ ! -d "$covdir" ]] || [[ ! -r "$covdir" ]]; then
  echo "*** minimizecovtests: can not read coverage test directory" 1>&2
  exit 1
fi

if [[ ! -e "$selected" ]] || [[ ! -f "$selected" ]] || [[ ! -r "$selected" ]]; then
  echo "*** minimizecovtests: can not read selected benchmarks" 1>&2
  exit 1
fi

id=1

while getopts "i:" o
do
  case "$o" in
  i)	id=$OPTARG;;
  [?])	echo "$usage" 1>&2; exit 1;;
  esac
done

#generate delta debugging script
deltadebscript="./covdeltadebrun$id"
rm -f "$deltadebscript"
exec >"$deltadebscript"
echo '#!/bin/bash'
echo 'readonly temp="/tmp/covdeltadebrun$$.tmp"'
echo 'readonly output="/tmp/covdeltadebrun$$output.tmp"'
echo 'readonly covdir="covtests/"'
echo 'readonly filecs="${covdir}deltadeb_id'$id'_cs"'
echo 'readonly fileerr="${covdir}deltadeb_id'$id'_err"'
echo 'cs=`cat "$filecs"`'
echo 'boolector $cs $1 1> /dev/null 2> $output'
echo 'cat "$output" | sort | uniq > $temp'
echo 'if [[ -z `diff -q "$temp" "$fileerr"` ]]; then'
echo '  exit 1'
echo 'fi'
echo 'exit 0'
chmod +x "$deltadebscript"
#reset stdout
exec >&2

while read line
do
  idstring=`echo "$line" | awk -F_ '{ print $2 }'`
  foundid=${idstring:2}
  if [[ "$foundid" -eq "$id" ]]; then
    errfile="$covdir${line}.err"
    csfile="$covdir${line}.cs"
    reducedfile="$covdir${line}.red"
    cp "$errfile" "${covdir}deltadeb_id${id}_err"
    cp "$csfile" "${covdir}deltadeb_id${id}_cs"
    testfile="$covdir${line}.btor"
    $deltabtor "$testfile" "$reducedfiletmp" "$deltadebscript"
    cp "$reducedfiletmp" "$reducedfile"
  fi
done < "$selected"
cleanup
