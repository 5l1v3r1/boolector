#!/bin/bash
readonly usage='boolector-ua -i|-d -z|-o|-s <smt-file>'
readonly headerfile=/tmp/boolector-ua-header$$.tmp
readonly bodyfile=/tmp/boolector-ua-body$$.tmp
readonly resultfilename=/tmp/boolector-ua-result$$
ref=d
enc=s
ebw=1
scriptheader="sed "
scriptbody="sed "

boolector=`which boolector`
if [[ -z "$boolector" ]]; then
  echo "can not find 'boolector'" 1>&2
  exit 1
fi

if [[ $# -eq 0 ]]; then
  echo "no smt file specified"
  exit 1
fi

while getopts "idzos" o
do
  case "$o" in
  i)	ref=i;;
  d)	ref=d;;
  z)	enc=z;;
  o)	enc=o;;
  s)	enc=s;;
  [?])	echo "$usage" 1>&2; exit 1;;
  esac
done

eval file=\$$#
if [[ ! -e $file ]] || [[ ! -r $file ]] || [[ ! -f $file ]]; then
  echo 'IO error'
  exit 1
fi

rm -f $headerfile
rm -f $bodyfile

header=1
while read -r line
do
  if [[ ${line:0:1} == ' ' ]]; then
    echo 'unsupported format'
    exit 1
  fi

  if [[ $header -eq 1 ]]; then
    if [[ ${line:0:8} == ':formula' ]] || [[ ${line:0:11} == ':assumption' ]]
    then
      header=0
    fi
    if [[ ${line:0:7} != ':status' ]]; then
      echo "$line" >> $headerfile
    fi
  else 
    echo "$line" >> $bodyfile
  fi
done < $file

while true 
do
  uapproxed=0
  while read line
  do
    if [[ ${line:0:10} == ':extrafuns' ]]; then
      lbrack=`expr index "$line" '['`
      rbrack=`expr index "$line" ']'`
      ((len = rbrack - lbrack - 1))
      v=`echo $line | awk '{ print $2 }'`
      v=${v:2}
      if [[ ${v:0:1} == '(' ]]; then
	echo 'unsupported format'
	exit 1
      fi
      bw=${line:$lbrack:$len}
      if [[ $bw -gt $ebw ]]; then
        uapproxed=1
	scriptheader=${scriptheader}"-e 's/($v\\s*BitVec\\[[0-9]*\\]))/($v BitVec[$ebw]))/g' "
	((diff = bw - ebw ))
	if [[ $enc == o ]]; then
	  scriptbody=${scriptbody}"-e 's/\\<$v\\>/(concat (repeat[$diff] bv1[1]) $v)/g' "
	elif [[ $enc == z ]]; then
	  scriptbody=${scriptbody}"-e 's/\\<$v\\>/(zero_extend[$diff] $v)/g' "
	else
	  if [[ $enc != s ]]; then
	    echo "internal error"
	    exit 1
	  fi
	  scriptbody=${scriptbody}"-e 's/\\<$v\\>/(sign_extend[$diff] $v)/g' "
	fi
      fi
    fi
  done < $headerfile

  if [[ $uapproxed -eq 1 ]]; then
    resultfile=${resultfilename}-${ebw}.smt
    eval $scriptheader < $headerfile > $resultfile
    eval $scriptbody < $bodyfile >> $resultfile
    scriptheader="sed "
    scriptbody="sed "
  else
    #last iteration, compute whole problem
    resultfile=$file
  fi 

  result=`$boolector $resultfile`

  if [[ $result != "unsat" ]] || [[ $uapproxed -eq 0 ]]; then
    break
  fi

  if [[ $ref == i ]]; then
    ((ebw++))
  else
    ((ebw <<= 1))
  fi
done

echo $result
