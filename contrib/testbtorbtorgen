#!/bin/bash

# ATTENTION: we use btorold2new filter as workaround

btorgen=unknown
for d in `echo $PATH | sed -e 's,:, ,g'` .
do
  file=$d/btorgen
  [ -d $d ] || continue
  [ -f $file ] || continue
  btorgen=$file
  break
done
if [[ $btorgen = unknown ]]; then
  echo "*** testbtorbtorgen: can not find 'btorgen'" 1>&2
  exit 1
fi

btorgenjava=unknown
for d in `echo $PATH | sed -e 's,:, ,g'` .
do
  file=$d/btorgenjava
  [ -d $d ] || continue
  [ -f $file ] || continue
  btorgenjava=$file
  break
done
if [[ $btorgenjava = unknown ]]; then
  echo "*** testbtorbtorgen: can not find 'btorgenjava'" 1>&2
  exit 1
fi

i=0
counter=0
valgrindcheck=100 # every nth testcase we perform a memory check with valgrind
file="/tmp/testbtorbtorgen$$.btor"
filedump="/tmp/testbtorbtorgendump$$.btor"
fileerror="./error.btor"
refinementlimit=100000
last=btorgenjava

if [[ $# -gt 1 ]]; then
  echo "*** testbtorbtorgen: usage: ./testbtorbtorgen [output-file]" 1>&2
  exit 1
fi

if [[ $# -eq 1 ]]; then
  fileerror=$1
fi

while true 
do 
  ((i++))
  ((counter++))
  rwl=rwl3
  echo -n "Test $i $rwl: "

  if [ $last = btorgen ]; then
    btorgenjava 2> /dev/null | sed -e 's,nego,redxor,g' | btorold2new > $file 
    last=btorgenjava
  else
    btorgen 2> /dev/null | btorold2new > $file 
    last=btorgen
  fi

  if [ ! -s $file ]; then
    echo "*** testbtorbtorgen: generated file is empty"
    exit 1
  fi 

  boolector -$rwl -rl $refinementlimit $file
  goldenretval=$?
  if [[ $goldenretval -ne 2 ]] && [[ $goldenretval -ne 3 ]]; then
    echo "ERROR"
    cp $file $fileerror
    echo "; default error" >> $fileerror
    exit
  fi

  for rwl in rwl2 rwl1 rwl0
  do
    echo -n "Test $i $rwl: "
    boolector -$rwl -rl $refinementlimit $file 
  retval=$?
  if [[ $retval -ne $goldenretval ]]; then
    echo "ERROR"
    cp $file $fileerror
    echo "; $rwl error" >> $fileerror
    exit
  fi 
  done

  echo -n "Test $i dump: "
  boolector $file -de > $filedump 
  boolector -rl $refinementlimit $filedump
  retval=$?
  if [[ $retval -ne $goldenretval ]]; then
    echo "ERROR"
    cp $file $fileerror
    echo "; dump error" >> $fileerror
    exit
  fi 

  if [[ $counter -eq $valgrindcheck ]]; then
    counter=0
    echo -n "Test $i valg: "
    memerr=`valgrind -q ../boolector $file 2>&1 | grep ==`
    if [[ -n $memerr ]]; then
      echo ""
      echo "ERROR"
      cp $file $fileerror
      echo "; valgrind error" >> $fileerror
      exit
    fi 
    echo "OK"
  fi

  echo ""
done
