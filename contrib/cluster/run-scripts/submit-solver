#!/bin/bash

die ()
{
  echo "*** submit_solver: $*" 1>&2
  exit 1
}

msg ()
{
  echo "[submit_solver] $*"
}

default_options=""
while [ $# -gt 0 ]
do
  case $1 in
    --default-options=*)
      default_options=$(echo "$1" | sed 's,^--default-options=,,')
      ;;
    *)
      [[ "$solver" != "" ]] && die "solver already set to '$solver'"
      solver="$1"
      ;;
  esac
  shift
done

[[ "$solver" == "" ]] && die "no solver binary specified"
[[ ! -e "$solver" ]] && die "solver '$solver' does not exist"
[[ -d "$solver" ]] && die "solver '$solver' is a directory"
[[ ! -x "$solver" ]] && die "solver '$solver' is not executable"

pwd=`pwd`
solver=$(readlink -f "$solver")
binary_name=$(basename "$solver")
msg "using '$solver' as solver"

ls benchmarks_* > /dev/null 2>&1
[[ $? != 0 ]] && die "no benchmark files found in current directory"

# select benchmark file
cnt=0
echo -e "\nbenchmarks available:"
for f in $(ls $pwd/benchmarks_*); do
  b=$(basename $f)
  b=${b#benchmarks_} 
  benchmark_list[$cnt]=$b
  num_benchmarks=$(wc -l $f | awk '{print $1}') 
  echo "  [$cnt] $b ($num_benchmarks)"
  ((cnt+=1))
done

i=0
while true;
do
  echo -n "select benchmarks (default: [0] ${benchmark_list[0]}): "
  read i 
  if (( i >= 0 && i < cnt)); then
    break
  fi
  msg "invalid benchmark set specified"
done
benchmarks_file=$pwd/benchmarks_${benchmark_list[$i]}

# set working directory
while true
do
  echo -n "choose working directory: "
  read working_dir
  if [[ "$working_dir" == "" ]]; then
    msg "no working directory specified"
    continue
  fi
  if [[ ! -d $working_dir ]]; then
    break
  fi
  msg "directory '$working_dir' already exists"
done

working_dir=$pwd/$(basename $working_dir)
mkdir $working_dir

# configure solver 
echo -n "choose '$binary_name' options (default: $default_options): "
read options
options="$default_options $options"

[[ "$options" != "" ]] && msg "using options '$options'"

# choose time limit
re='^[0-9]+$'
while true
do
  echo -n "choose time limit (default: 1200): " 
  read time_limit

  if [[ "$time_limit" == "" ]]; then
    time_limit=1200
    break
  fi
  if [[ ! $time_limit =~ $re ]]; then
    msg "time limit '$time_limit' is not a number"
    continue
  else
    break
  fi
done

# choose space limit
while true
do
  echo -n "choose space limit (default: 7000): " 
  read space_limit

  if [[ "$space_limit" == "" ]]; then
    space_limit=7000
    break
  fi
  if [[ ! $space_limit =~ $re ]]; then
    msg "space limit '$space_limit' is not a number"
    continue
  else
    break
  fi
done

# save options, benchmarks file, solver
cp $benchmarks_file $working_dir
cp $solver $working_dir
solver=$working_dir/$binary_name
echo "time limit: $time_limit" > $working_dir/options
echo "space limit: $space_limit" >> $working_dir/options
echo "$options" >> $working_dir/options

# get most common prefix of all benchmark files
prefix=$(cat $benchmarks_file | sed -e 'N;s/^\(.*\).*\n\1.*$/\1\n\1/;D')

# start jobs
for b in $(cat $benchmarks_file)
do
  basename=$(basename $b)
  out="$(echo ${b#$prefix} | sed -e 's,/,-,g' -e 's,\.smt.*,,')"
  out="$working_dir/$out"
  qsub \
    -e ":$out.err" \
    -o ":$out.log" \
    $HOME/bin/launch \
    --time-limit=$time_limit \
    --space-limit=$space_limit \
    $solver \
    $options \
    $b
done
