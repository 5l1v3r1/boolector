#!/bin/bash

readonly fuzztestseconds=60
readonly exampledirs="bv array"
readonly usage="usage: mkrelease [-m32|-m64]"
architecture=IA-32
cflag=-m32

if [[ $# -gt 1 ]]; then
  echo $usage
  exit 1
fi

if [[ $# -eq 1 ]]; then 
  if [[ $1 != "-m32" ]] && [[ $1 != "-m64" ]]; then
    echo $usage
    exit 1
  fi
  if [[ $1 == "-m64" ]]; then
    if [[ -z `uname -a | grep x86_64` ]]; then
      echo "cannot compile for 64 bits"
      exit 1
    fi
    architecture=IA-64
    cflag=-m64
  fi
fi

#get path
cd `dirname $0`
cd ..
boolectordir=`pwd`

#build picosat
cd ../picosat || exit 1
if [[ $cflag == -m32 ]]; then
  ./configure -O -m32 || exit 1
else
  ./configure -O || exit 1
fi
make || exit 1

#build boolector
cd ../boolector
./configure $cflag -r || exit 1
make merge || exit 1
version=`cat VERSION`
boolectorstring=boolector-${version}-$architecture
target=/tmp/$boolectorstring
rm -r -f $target
mkdir $target
mkdir ${target}/bin
mkdir ${target}/lib
mkdir ${target}/include
mkdir ${target}/examples
cp README $target
cp LICENSE $target
cp boolector ${target}/bin
cp libboolector.a ${target}/lib

#copy and adapt public interface header file
sed -e 's/#include "btorexp.h"/typedef struct BtorExp BtorExp;\ntypedef struct Btor Btor;/g' boolector.h > ${target}/include/boolector.h

# copy and adapt examples
for dir in $exampledirs
do
  mkdir ${target}/examples/$dir
  echo 'LIBPATH=../../lib' > ${target}/examples/${dir}/makefile
  sed -n '2,$p' examples/${dir}/makefile >> ${target}/examples/${dir}/makefile
  num=`ls examples/${dir}/*.c | wc -l`
  for ((i = 1; i <= $num; i++))
  do
    file=${dir}${i}.c
    echo '#include "../../include/boolector.h"' > ${target}/examples/${dir}/$file
    sed -n '2,$p' examples/${dir}/$file >> ${target}/examples/${dir}/$file
  done
done

#generate documentation
sed -e 's/boolector\.h/include/g' Doxyfile > ${target}/Doxyfile
cd $target
doxygen || exit 1
rm Doxyfile

#tar and zip
cd /tmp
tar cfzv ${boolectorstring}.tar.gz $boolectorstring
rm -r -f $boolectorstring

#extract for testing
tar xfzv ${boolectorstring}.tar.gz
cd $boolectorstring
cd examples
for dir in $exampledirs
do
  cd $dir
  make || exit 1
  for file in *.c
  do
    executable=${file%.c} 
    ./$executable || exit 1
  done
  cd ..
done

#fuzz testing
cd ${boolectordir}/contrib
echo ""
echo "Fuzz testing binary release of boolector for $fuzztestseconds seconds"
echo ""
rm -f error*.*
./fuzztestboolector &
pid=$!
sleep $fuzztestseconds 
kill $pid
if [[ `ls error*.* 2> /dev/null | wc -l` -ne 0 ]]; then
  echo ""
  echo "FUZZ TESTING FAILED"
  echo ""
  exit 1
fi

# check if fuzz-tested binary and generated binary are the same
diff ../boolector ${target}/bin/boolector
if [[ $? -ne 0 ]]; then
  echo ""
  echo "FUZZ-TESTED BINARY AND GENERATED BINARY DO NOT MATCH"
  echo ""
  exit 1
fi

echo ""
echo "RELEASE $boolectorstring SUCCESSFUL"
echo ""
