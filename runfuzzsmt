#!/bin/bash

readonly BTORDIR=$(dirname "$(readlink -f $0)")
readonly PARENTDIR=$(dirname "$BTORDIR")
readonly BOOLECTOR=$BTORDIR/boolector
readonly FUZZSMT=$PARENTDIR/fuzzsmt/fuzzsmt
readonly DELTABTOR=$BTORDIR/deltabtor
BUG_DIR=$(pwd)/failed-tmp

die ()
{
  echo "*** $(basename $0): $*" 1>&2
  exit 1
}

cleanup-and-exit ()
{
  rm -f $tmp
  kill $(jobs -p) 2> /dev/null
  echo
  exit
}

val=undefined
tmp=/tmp/runfuzzsmt-$$.btor
trap "cleanup-and-exit;" SIGHUP SIGINT SIGTERM

logic=QF_AUFBV
opts=""
cmd=""
while [ $# -gt 0 ]
do
  case $1 in
    -h|--help) 
               echo -n "usage: $(basename $0) "
               echo -en "[<option>|<fuzzsmt_option>] <command>"
               echo
               echo "  options:"
               echo "    -h,--help        print this message and exit"
               echo -n "    --logic=<logic>  use <logic> (default: QF_AUFBV, "                 echo "<logic>: see fuzzsmt -h)"
               echo -n "    --check=<val>    use individual return value <val> "
               echo "for non-failure-case"
               echo
               echo "  fuzzsmt_options:   see fuzzsmt -h"
               echo
               exit
               ;;
    --logic=*) logic=$(echo "$1" | sed -e 's,^--logic=,,')
               ;;
    --check=*) val=$(echo "$1" | sed -e 's,^--check=,,')
               ;;
    --bug-dir=*) BUG_DIR=$(echo "$1" | sed -e 's,^--bug-dir=,,')
                 ;;
    -*|[0-9]*) opts="$opts $1"
               ;;
    *) break;;
  esac
  shift
done

cmd="$*"

[ x"$cmd" = x ] && die "command missing"
[ ! -e $FUZZSMT ] && die "$FUZZSMT not found"

echo "logic:   $logic"
echo "options: $opts"
echo "command: $cmd"
echo

count=1
while true
do
  rm -f "$tmp"
  "$FUZZSMT" "$logic" "$opts" |"$BOOLECTOR" -de > $tmp 2> /dev/null
  buglines=`wc -l "$tmp"|awk '{print $1}'`

  echo -en "runs: $count"

  $cmd "$tmp" > /dev/null 2>&1
  res=$?

  case $res in
    10|20) echo -en "\r"
           ;;
    *)     if [[ x"$val" != xundefined && $res == $val ]]; then 
             echo -en "\r"
           else
             mkdir -p "$BUG_DIR"
             bug="$BUG_DIR"/bug-$$-${count}.btor
             echo "; fuzzer:  $(basename $0) $opts" > "$bug"
             echo "; command: $cmd" >> "$bug"
             cat "$tmp" >> "$bug"
             echo -en "\t"
             echo -n $(basename "$bug")
             red="$BUG_DIR"/red-$$-${count}.btor
             "$DELTABTOR" "$bug" "$red" "$cmd" > /dev/null 2>&1
             if [ -e "$red" ]; then
               redlines=`wc -l "$red"|awk '{print $1}'`
             else
               redlines=$buglines
             fi
             echo -n " "
             echo -n $(basename "$red")
             echo -e "  ($buglines -> $redlines)"
           fi
           ;;
  esac
  ((count += 1))
done

cleanup-and-exit
