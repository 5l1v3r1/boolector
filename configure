#!/bin/sh

debug=unknown
precosat=unknown
lingeling=unknown
minisat=unknown
arch=unknown

die () {
  echo "*** configure: $*" 1>&2
  exit 1
}

msg () {
  echo "[configure] $*"
}

usage () {
cat <<EOF
usage: ./configure [<option> ...]

where <option> is one of the following:

  -O              optimized compilation (default)
  -g              compile with debugging support
  -m{32,64}       force 32-bit or 64-bit compilation

By default all supported SAT solvers are used and linked into
the binary if they can be found in the parent directory.

  --precosat      use and link with PrecoSAT
  --lingeling     use and link with Lingeling
  --minisat       use and linke with MiniSAT

To disable some of them use the following options:

  --no-precosat   do not use PrecoSAT
  --no-lingeling  do not use Lingeling
  --no-minisat    do not use Lingeling

In addition PicoSAT is always required as default back end SAT solver.
EOF
  exit 0
}

while [ $# -gt 0 ]
do
  case $1 in
    -g) debug=yes;;
    -O) debug=no;;
    -m32|--m32) arch=32;;
    -m64|--m64) arch=64;;
    -precosat|--precosat) precosat=yes;;
    -lingeling|--lingeling) lingeling=yes;;
    -minisat|--minisat) minisat=yes;;
    -no-precosat|--no-precosat) precosat=no;;
    -no-lingeling|--no-lingeling) lingeling=no;;
    -no-minisat|--no-minisat) minisat=no;;
    -h|-help|--help) usage;;
    -*) die "invalid option '$1' (try '-h')";;
  esac
  shift
done

addstcpp () {
  if [ X"`echo "$LIBS" | grep 'lstdc++'`" = X ]
  then
    [ X"$LIBS" = X ] || LIBS="$LIBS "
    LIBS="${LIBS}-lstdc++"
    msg "need to link against 'libstdc++'"
  fi
}

#--------------------------------------------------------------------------#

if [ $debug = yes ]
then
  msg "compiling for debugging"
else
  msg "optimized compilation without debugging symbols"
fi

if [ X"$CFLAGS" = X ]
then
  [ $debug = unknown ] && debug=no
  CFLAGS="-W -Wall -Wextra"
  [ $arch = 32 ] && CFLAGS="$CFLAGS -m32"
  [ $arch = 64 ] && CFLAGS="$CFLAGS -m64"
  if [ $debug = yes ]
  then
    CFLAGS="$CFLAGS -g3 -ggdb"
  else
    CFLAGS="$CFLAGS -DNDEBUG -O3"
  fi
elif [ $debug = yes ]
then
  die "CFLAGS environment variable defined and '-g' used"
elif [ $debug = no ]
then
  die "CFLAGS environment variable defined and '-O' used"
fi

LIBS=""
OBJS=""

#--------------------------------------------------------------------------#

if [ -d ../picosat ]
then
  for path in ../picosat/picosat.o ../picosat/version.o allfound
  do
    [ -f $path ] || break
  done
else
  path=../picosat
fi

if [ $path = allfound ]
then
  msg "using PicoSAT in '../picosat'"
  [ X"$OBJS" = X ] || OBJS="$OBJS "
  OBJS="${OBJS}../picosat/picosat.o ../picosat/version.o"
else
  die "PicoSAT not found: '$path' missing"
fi

#--------------------------------------------------------------------------#

if [ $precosat = no ]
then
  msg "not using PrecoSAT as requested by command line option"
else

  if [ -d ../precosat ]
  then
    for path in \
      ../precosat/precosat.hh \
      ../precosat/precosat.o \
      ../precosat/precobnr.o \
      allfound
    do
      [ -f $path ] || break
    done
  else
    path=../precosat
  fi

  if [ $path = allfound ]
  then
    msg "using PrecoSAT in '../precosat'"
    precosat=yes
  elif [ $precosat = yes ]
  then
    die "impossible to use PrecoSAT: '$path' missing"
  else
    msg "disabling PrecoSAT: '$path' missing"
    precosat=no
  fi

  if [ $precosat = yes ]
  then
    [ X"$CFLAGS" = X ] || CFLAGS="$CFLAGS "
    [ X"$OBJS" = X ] || OBJS="$OBJS "
    [ X"$LIBS" = X ] || LIBS="$LIBS "
    CFLAGS="${CFLAGS}-DBTOR_USE_PRECOSAT"
    OBJS="${OBJS}btorpreco.o ../precosat/precosat.o ../precosat/precobnr.o"
    LIBS="${LIBS}-lz"
    addstcpp
  fi

fi

#--------------------------------------------------------------------------#

if [ $lingeling = no ]
then
  msg "not using Lingeling as requested by command line option"
else

  if [ -d ../lingeling ]
  then
    for path in ../lingeling/lglib.h ../lingeling/liblgl.a allfound
    do
      [ -f $path ] || break
    done
  else
    path=../lingeling
  fi

  if [ $path = allfound ]
  then
    msg "using Lingeling in '../lingeling'"
    lingeling=yes
  elif [ $lingeling = yes ]
  then
    die "impossible to use Lingeling: '$path' missing"
  else
    msg "disabling Lingeling: '$path' missing"
    lingeling=no
  fi

  if [ $lingeling = yes ]
  then
    [ X"$CFLAGS" = X ] || CFLAGS="$CFLAGS "
    [ X"$LDEPS" = X ] || LDEPS="$LDEPS "
    [ X"$LIBS" = X ] || LIBS="$LIBS "
    CFLAGS="${CFLAGS}-DBTOR_USE_LINGELING"
    LIBS="${LIBS}-L../lingeling -llgl -lm"
    LDEPS="${LDEPS}../lingeling/liblgl.a"
  fi

fi

#--------------------------------------------------------------------------#

if [ $minisat = no ]
then
  msg "not using MiniSAT as requested by command line option"
else

  for path in \
    ../minisat \
    ../minisat/minisat \
    ../minisat/minisat/simp \
    ../minisat/build/release \
    allfound
  do
    [ -d $path ] || break
  done

  if [ $path = allfound ]
  then
    for path in \
      ../minisat/build/release/SimpSolver.h \
      ../minisat/build/release/lib/libminisat.a \
    do
      [ -f $path ] || break
    done
  fi

  if [ $path = allfound ]
  then
    msg "using MiniSAT in '../minisat'"
    minisat=yes
  elif [ $minisat = yes ]
  then
    die "impossible to use MiniSAT: '$path' missing"
  else
    msg "disabling MiniSAT: '$path' missing"
  fi

  if [ $minisat = yes ]
  then
    [ X"$CFLAGS" = X ] || CFLAGS="$CFLAGS "
    [ X"$OBJS" = X ] || OBJS="$OBJS "
    [ X"$LIBS" = X ] || LIBS="$LIBS "
    CFLAGS="${CFLAGS}-DBTOR_USE_MINISAT"
    OBJS="${OBJS}btorminisat.o"
    LIBS="${LIBS}-lz -L../minisat/build/release/lib -Lminisat"
    addstcpp
  fi

fi

#--------------------------------------------------------------------------#

[ "X$CC" = X ] && CC=gcc

msg "CC=$CC"
msg "CFLAGS=$CFLAGS"
msg "LIBS=$LIBS"
msg "OBJS=$OBJS"

rm -f makefile
sed \
  -e "s,@CC@,$CC," \
  -e "s,@CFLAGS@,$CFLAGS," \
  -e "s,@LIBS@,$LIBS," \
  -e "s,@LDEPS@,$LDEPS," \
  -e "s,@OBJS@,$OBJS," \
  makefile.in > makefile
msg "makefile generated"
