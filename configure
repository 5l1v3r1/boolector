#!/bin/sh

LIBS=""

debug=no

o1=no
o2=yes
o3=no
static=no
m32=no
m64=no
gpt=no
release=no
competition=no
precosat=no
lingeling=no
strip=no
cov=no

while [ $# -gt 0 ]
do
  case $1 in
    -g) debug=yes; cov=no; o1=no; o2=no; o3=no;;
    -cov) debug=no; cov=yes; o1=no; o2=no; o3=no;;
    -O1) debug=no; cov=no; o1=yes; o2=no; o3=no;;
    -O2) debug=no; cov=no; o1=no; o2=yes; o3=no;;
    -O3) debug=no; cov=no; o1=no; o2=no; o3=yes;;
    -no-opt) o1=no; o2=no; o3=no;;
    -static) static=yes;;
    -m32) m32=yes;;
    -m64) m64=yes;;
    -s) strip=yes;;
    -gpt) gpt=yes; debug=no; cov=no; o1=no; o2=yes; o3=no;;
    -precosat) precosat=yes;;
    -lingeling) lingeling=yes;;
    -r) competition=no;release=yes;precosat=no;lingeling=yes;
        static=no;debug=no;cov=no;o1=no;o2=no;o3=yes;strip=yes
	;;
    -c) competition=yes;release=no;precosat=no;lingeling=yes;
        static=yes;debug=no;cov=no;o1=no;o2=no;o3=yes;strip=yes
	;;
    *) cat <<EOF
*** usage: ./configure [<option> ...]

where <option> is one of the following:

  -g          compile with debugging support
  -s          strip symbols
  -cov        generate coverage
  -O[1-3]     optimization level
  -no-opt     no optimization
  -static     static linking
  -m{32,64}   32-bit or 64-bit compilation
  -gpt        link with perftools
  -precosat   link with PrecoSAT
  -lingeling  link with Lingeling
  -r          release configuration
  -c          competition configuration
EOF
exit 1
;;
  esac
shift
done

if [ X"$CFLAGS" = X ]; then
  CFLAGS="$CFLAGS -W -Wall -Wextra"
  [ $static = yes ] && CFLAGS="$CFLAGS -static"
  [ $m32 = yes ] && CFLAGS="$CFLAGS -m32"
  [ $m64 = yes ] && CFLAGS="$CFLAGS -m64"
  if [ $debug = yes ]; then
    CFLAGS="$CFLAGS -g3 -ggdb"
  else
    CFLAGS="$CFLAGS -DNDEBUG"
    if [ $cov = yes ]; then
      CFLAGS="$CFLAGS -fprofile-arcs -ftest-coverage"
    elif [ $o3 = yes ]; then
      CFLAGS="$CFLAGS -O3 -fomit-frame-pointer"
    elif [ $o2 = yes ]; then
      CFLAGS="$CFLAGS -O2"
    elif [ $o1 = yes ]; then
      CFLAGS="$CFLAGS -O1"
    fi
  fi
fi

if [ $competition = yes  -o $release = yes -a $gpt = yes ]; then
  LIBS=$LIBS" -ltcmalloc -lstdc++ -lpthread"
elif [ $gpt = yes ]; then
  LIBS=$LIBS" -ltcmalloc -lprofiler"
fi

PRECOSAT_OBJS=""
if [ $precosat = yes ]; then
  CFLAGS=$CFLAGS" -DBTOR_USE_PRECOSAT"
  PRECOSAT_OBJS="btorpreco.o ../precosat/precosat.o ../precosat/precobnr.o"
  LIBS=$LIBS" -lz"
  if [ x"`echo "$LIBS" | grep 'lstdc++'`" = x ]; then
    LIBS=$LIBS" -lstdc++"
  fi
fi

if [ $lingeling = yes ]; then
  CFLAGS=$CFLAGS" -DBTOR_USE_LINGELING"
  LIBS=$LIBS" -L../lingeling -llgl -lm"
  LDEPS=$LDEPS" ../lingeling/liblgl.a"
fi

if [ $strip = yes ]
then
  STRIP='; strip $@'
else
  STRIP=""
fi

[ "X$CC" = X ] && CC=gcc

echo "cc ... $CC"
echo "cflags ... $CFLAGS"
echo "libs ... $LIBS"
echo "debug ... $debug"
echo "coverage ... $cov"
echo "O1 ... $o1"
echo "O2 ... $o2"
echo "O3 ... $o3"
echo "static ... $static"
echo "m32 ... $m32"
echo "m64 ... $m64"
echo "gpt ... $gpt"
echo "precosat ... $precosat"
echo "lingeling ... $lingeling"
echo "strip ... $strip"

echo -n "makefile ..."
rm -f makefile
sed \
  -e "s,@CC@,$CC," \
  -e "s,@CFLAGS@,$CFLAGS," \
  -e "s,@LIBS@,$LIBS," \
  -e "s,@LDEPS@,$LDEPS," \
  -e "s,@STRIP@,$STRIP," \
  -e "s,@PRECOSAT_OBJS@,$PRECOSAT_OBJS," \
  makefile.in > makefile
echo " done"
