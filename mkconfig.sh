#!/bin/sh

die () {
   echo "*** mkconfig.sh: $*" 1>&2
   exit 1
}

[ -f makefile ] || die "can not find 'makefile'"

config=$1

# update config if git commit id changes
if [ -f $config ]; then
  commit_conf=`grep BTOR_ID $config | cut -d ' ' -f 3 | grep -o -e '[0-9a-z]\+'`
  commit_cur=`./getgitid.sh`
  if [ "$commit_conf" == "$commit_cur" ]; then
    echo "[mkconfig.sh] commit id not changed, do not update $config"
    exit
  fi
fi

cat > $config <<EOF
/*************************************************************/
/* Automatically generated by './mkconfig.sh': do note edit! */
/*************************************************************/
EOF

if [ ! x"`grep '^CC=gcc$' makefile`" =  x ]
then
  patchgccversion="`gcc --version|head -1|sed -e 's/,/ /g'`"
  patchgccversion="s,gcc,$patchgccversion,g"
else
  patchgccversion="s,DUMMY,DUMMY,"
fi

sed \
  -e '/^C[A-Z]*=/!d' \
  -e 's,^,#define BTOR_,' \
  -e 's,= *, ",' \
  -e 's,$,",' \
  makefile | sed -e "$patchgccversion" >> $config

echo "#define BTOR_OS \"`uname -srmn`\"" >> $config 
echo "#define BTOR_COMPILED \"`date`\"" >> $config

curpath=`pwd`
echo "#define BTOR_SRC_DIR   \"$curpath/\"" >> $config
echo "#define BTOR_BIN_DIR   \"$curpath/bin/\"" >> $config
echo "#define BTOR_BUILD_DIR \"$curpath/build/\"" >> $config
echo "#define BTOR_TEST_DIR  \"$curpath/src/tests/\"" >> $config
echo "#define BTOR_LOG_DIR   \"$curpath/src/tests/log/\"" >> $config
echo "#define BTOR_CONTRIB_DIR \"$curpath/contrib/\"" >> $config

# PUT NOTHING BELOW THE NEXT COMMENT LINE ...

#CUTHERE AND DO NOT REMOVE THIS COMMENT!

echo "#define BTOR_RELEASED \"`date`\"" >> $config
echo "#define BTOR_VERSION \"`cat VERSION`\"" >> $config
echo "#define BTOR_ID \"`./getgitid.sh`\"" >> $config
