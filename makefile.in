.SUFFIXES: .o .c .cc
.c.o:
	$(CC) $(CFLAGS) -c $<
.cc.o:
	$(CC) $(CFLAGS) -c $<
SHELL=/bin/sh
VERSION=$(shell cat VERSION)
PICOSATOBJ=../picosat/picosat.o ../picosat/version.o @PICOPREP_OBJS@ @PRECOSAT_OBJS@
LIBOBJ= \
  $(addsuffix .o,$(basename $(wildcard btor*.c))) \
  boolector.o $(PICOSATOBJ)
TESTOBJ=$(addsuffix .o,$(basename $(wildcard test*.c)))
CC=@CC@
CFLAGS=@CFLAGS@
LIBS=@LIBS@
SRC=$(shell ls *.c *.h|grep -v merged)

# Standard goal for internal builds: all.
#
all: libboolector.a boolector test synthebtor deltabtor basicbtor

-include dependencies
btorpreco.o: btorpreco.cc makefile

dependencies: btorconfig.h $(SRC) makefile
	rm -f $@; $(CC) $(CFLAGS) -MM *.c|sed -e 's,:,: makefile,'>$@
boolector: boolectormain.o libboolector.a
	$(CC) $(CFLAGS) -o $@ boolectormain.o -L. -lboolector $(LIBS)@STRIP@

# Merge all files into one compilation unit.
#
# NOTE you can NOT link the tests to this merged 'libboolector.a',
# which is actually not a bug, but a feature.
#
merge: boolectormain.o merged.o
	rm -f libboolector.a
	ar rc libboolector.a merged.o
	strip --strip-unneeded libboolector.a
	$(CC) $(CFLAGS) -o boolector boolectormain.o -L. -lboolector $(LIBS)
	strip boolector
	@make -s size symbols
merged.c: btorconfig.h $(SRC) \
  ../picosat/picosat.h ../picosat/config.h \
  ../picosat/picosat.c ../picosat/version.c \
  makefile contrib/merge
	rm -f merged.c; ./contrib/merge > merged.c
merged.o: merged.c
	$(CC) $(CFLAGS) -Wno-unused-function -c merged.c
	strip --strip-unneeded $@

# After merging switch back to seperate compilation units.
#
seperate:
	rm -f libboolector.a merged.c
	make all
	@make -s size symbols

size:
	@ls -l libboolector.a boolector|awk '{print $$NF,$$5,"bytes"}'
symbols:
	@symbols=`nm libboolector.a|wc -l`; \
	echo "libboolector.a $$symbols symbols"

test: $(TESTOBJ) libboolector.a 
	@if [ -f merged.c ]; then \
	echo "*** can not link 'test...' to merged 'libboolector.a'"; \
	echo "*** (to switch to seperate compilation use 'make seperate')"; \
	exit 1; fi
	$(CC) $(CFLAGS) -o $@ $(TESTOBJ) -L. -lboolector $(LIBS)@STRIP@

synthebtor: synthebtor.o libboolector.a
	$(CC) $(CFLAGS) -o $@ synthebtor.o -L. -lboolector $(LIBS)@STRIP@

deltabtor: deltabtor.c makefile
	$(CC) $(CFLAGS) -o $@ deltabtor.c@STRIP@

basicbtor: basicbtor.c makefile
	$(CC) $(CFLAGS) -o $@ basicbtor.c@STRIP@

libboolector.a: $(LIBOBJ)
	rm -f $@ merged.c
	ar rc $@ $(LIBOBJ)
	ranlib $@

btorconfig.h: makefile VERSION mkconfig
	rm -f $@; ./mkconfig > $@

clean:
	rm -f test boolector deltabtor synthebtor basicbtor
	rm -f *.o *.a
	rm -f *.gcda *.gcno *.gcov 
	rm -f log/*.log
	rm -f dependencies
	rm -f *.tmp
	rm -f makefile
	rm -f btorconfig.h
	rm -f merged.c

.PHONY: all clean merge seperate size symbols
